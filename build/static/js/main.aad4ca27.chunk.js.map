{"version":3,"sources":["SuperButton.js","App.js","index.js"],"names":["App","useState","text","setText","className","onClick","style","background","color","outline","target","rel","href","src","alt","width","rootElement","document","getElementById","createRoot","render"],"mappings":"sIAEe,SAASA,IACtB,MAAwBC,mBAAS,yBAAwB,mBAAlDC,EAAI,KAAEC,EAAO,KAEpB,OACE,qBAAKC,UAAU,cAAa,SAC1B,wBACEC,QAAS,kBAAMF,EAAQ,kCAAkC,EACzDG,MAAO,CAAEC,WAAY,MAAOC,MAAO,QAASC,QAAS,QAAS,SAE7DP,KAIT,CCZe,SAASF,IACtB,OACE,sBAAKI,UAAU,MAAK,UAClB,mDACoB,IAClB,mBACEM,OAAO,SACPC,IAAI,sBACJC,KAAK,wBAAuB,qBAI3B,kBAEL,+BACE,mFACoD,IAClD,8CAAyB,OAAI,mDAA8B,KAAE,uBAAM,YAEnE,+BACE,iEACA,qEACA,2EAGJ,mEAEE,+BACE,uDACuB,mDAA8B,gEAEnD,+BACE,mEACA,iEACA,+DACA,2CAGJ,oHAEuB,8CAAyB,KAAG,OAEnD,iGAGJ,kDACmB,IACjB,mBACEF,OAAO,SACPC,IAAI,sBACJC,KAAK,kDAAiD,oBAGnD,IAAG,qBACU,cAAC,EAAW,IAC9B,+BACE,sDACsB,4DAEtB,oDACA,sDACsB,mEAAyC,OAE/D,sEAIN,qBAAKC,IAAI,iBAAiBC,IAAI,aAAaR,MAAO,CAAES,MAAO,aAGjE,CCpEA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.aad4ca27.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [text, setText] = useState(\"I'm an awesome button\");\r\n\r\n  return (\r\n    <div className=\"SuperButton\">\r\n      <button\r\n        onClick={() => setText(\"I'm not a super awesome button?\")}\r\n        style={{ background: \"red\", color: \"white\", outline: \"none\" }}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SuperButton from \"./SuperButton\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>\r\n        Hello Tests! With{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://jestjs.io/en/\"\r\n        >\r\n          Jest\r\n        </a>\r\n      </h1>\r\n      Your tasks are:\r\n      <ol>\r\n        <li>\r\n          [Vanilla JS] To create tests for each function of{\" \"}\r\n          <strong>utils.js</strong> in <strong>utils.spec.js</strong>. <br />\r\n          For each:\r\n          <ul>\r\n            <li> A description of the function </li>\r\n            <li> A test to make the function works </li>\r\n            <li> A test to make the function fails </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          [Vanilla JS] With a TTD approach:\r\n          <ul>\r\n            <li>\r\n              Create the tests (in <strong>phone.spec.js</strong>) to check if a\r\n              number is a German phone number, for example:\r\n              <ul>\r\n                <li>The format can be +491 000 000000</li>\r\n                <li>The format can be +491000000000</li>\r\n                <li>The format can be 01000000000</li>\r\n                <li>...</li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              Then, and only then, create the function to check if a phone\r\n              number is German (in <strong>phone.js</strong>).{\" \"}\r\n            </li>\r\n            <li>Would your function be the same without the tests before?</li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          [React] By using{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://jestjs.io/docs/en/tutorial-react#enzyme\"\r\n          >\r\n            Enzyme\r\n          </a>{\" \"}\r\n          with this button: <SuperButton />\r\n          <ul>\r\n            <li>\r\n              Test if the text is <i>\"I'm an awesome button\"</i>\r\n            </li>\r\n            <li> Simulate a click </li>\r\n            <li>\r\n              Test if the text is <i>\"I'm not a super awesome button?\"</i>{\" \"}\r\n            </li>\r\n            <li>(check if the color is red)</li>\r\n          </ul>\r\n        </li>\r\n      </ol>\r\n      <img src=\"Screenshot.png\" alt=\"screenshot\" style={{ width: \"100vw\" }} />\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}